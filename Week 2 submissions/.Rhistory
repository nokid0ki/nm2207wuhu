install.packages("tiddyverse")
install.packages("ggplot2")
install.packages("shiny")
install.packages("tiddyverse")
install.packages('tidyverse', dependencies=TRUE, type="source")
library(tiddyverse)
library(ggplot2)
library(shiny)
library(tiddyverse)
library(tidyverse)
install.packages(tidyverse)
install.packages(tiddyverse)
install.packages("tidyverse")
library(tidyverse)
starwars
?starwars
filter_rows <- c("Luke Skywalker","R2-D2","Darth Vader")
starwars %>% filter(name%in%filter_rows) %>% select(name,height, mass,homeworld,films)
filter_rows <- c("Luke Skywalker","R2-D2")
starwars %>% filter(name%in%filter_rows) %>% pull(films)
nrow(starwars)
ncol(starwars)
dim(starwars)
ggplot(data=starwars)
aes(x=height)
ggplot(data=starwars) +
aes(x=height)
+ aes(y=mass)
ggplot(data=starwars) +
aes(y=mass)
ggplot(data=starwars) +
aes(x=height), aes(y=mass)
ggplot(data=starwars,mapping=aes(x=height,y=mass))
ggplot(data=starwars,mapping=aes(x=height,y=mass)) +
geom_point()
ggplot(data=starwars,mapping=aes(x=height,y=mass)) +
geom_point() +
labs(x="Height (cm)",y="Weight (Kg)",
title="Mass versus Height")
ggplot(data=starwars,mapping=aes(x=height,y=mass)) +
geom_point() +
labs(x="Height (cm)",y="Weight (Kg)",
title="Mass versus Height",
caption="Source: tidyverse/ starwars dataset")
runExample("01_hello")
runExample("06_tabsets")
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/Documents/1 UNI STUFF/NM2207/Week 2")
knitr::opts_chunk$set(echo = TRUE)
read_csv("playlist_data.csv")
library(readr)
playlist_data <- read_csv("playlist_data.csv")
View(playlist_data)
read_csv("playlist_data.csv")
insert_name_of_variable <- read_csv("playlist_data.csv")
Music_Genre <- read_csv("playlist_data.csv")
Music_Genre<- read_csv("playlist_data.csv")
# Assign the variable to a dataset
Music_Genre <- read_csv("playlist_data.csv")
DJ_Name <- read_csv("playlist_data.csv")
knitr::include_graphics("playlist_data.csv")
# Type the name of the variable, to see what it contains
filter_rows <- c("DJ_Name")
playlist_data %>% filter(name%in%filter_rows) %>% select(Music_Genre)
# Type the name of the variable, to see what it contains
filter_rows <- c("DJ_Name")
playlist_data %>% select(Music_Genre)
# Type the name of the variable, to see what it contains
filter_rows <- c("DJ_Name")
# Type the name of the variable, to see what it contains
DJ_Name
# Type the name of the variable we assigned the data-set to
head(DJ_Name)
# Number of columns
ncol(x)
ncol(playlist_data.csv)
# Number of columns
ncol(playlist_data)
nrow(playlist_data)
split(playlist_data,seq(nrow(playlist_data)))
list(location)
Print(variablename["Location"])
Print(variablename["Location"])
Print(playlist_data, variablename["Location"])
data.frame(df$A,df$B,df$E)
playlist_data %>% filter(name%in%filter_rows) %>% pull(Location)
# complete the code to generate the plot
ggplot(playlist_data)
# complete the code to generate the plot
ggplot(data=playlist_data)
# complete the code to generate the plot
ggplot(data=playlist_data)
ggplot(data = playlist_data)
# complete the code to generate the plot
library(ggplot)
# complete the code to generate the plot
library(ggplot2)
ggplot(data = playlist_data)
aes(x=Age,y=Rating)
# complete the code to generate the plot
library(ggplot2)
ggplot(data = playlist_data)
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating))
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point()
?geom_point
# complete the code to generate the plot
ggplot(name_of_the_variable)
# complete the code to generate the plot
?geom_point
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
# complete the code to generate the plot
?geom_point
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point(shape = 5, colour = "black", fill = "white", size = 3, stroke = 3)
# complete the code to generate the plot
?geom_point
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point(shape = 5, colour = "black", fill = "white", size = 1, stroke = 1)
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point() +
labs(x="Age",y="Ratings",
title="Does the age of the DJ affect their ratings?")
There is no correlation.
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point() +
labs(x="Age",y="Ratings",
title="Does the age of the DJ affect their ratings?",
caption="There is no correlation."
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point() +
labs(x="Age",y="Ratings",
title="Does the age of the DJ affect their ratings?",
caption="There is no correlation.")
# Type the name of the variable, to see what it contains
DJ_Name
Age
# Type the name of the variable, to see what it contains
DJ_Name
Rating
# Type the name of the variable, to see what it contains
DJ_Name
# More information about the R command, complete the code
?read_csv()
knitr::include_graphics("help")
knitr::include_graphics("help.png")
# Type the name of the variable, to see what it contains
DJ_Name
# Stack columns of playlist_data
playlist_data[1]
# Stack columns of playlist_data
col(playlist_data, as.factor = false)
# Stack columns of playlist_data
col(playlist_data, as.factor = TRUE)
# Stack columns of playlist_data
colnames(playlist_data,do.null=true,prefix="col")
# Stack columns of playlist_data
colnames(playlist_data,do.null=f,prefix="col")
# Stack columns of playlist_data
colnames(playlist_data,prefix="col")
# Stack columns of playlist_data
list(colnames(playlist_data,prefix="col"))
# Stack columns of playlist_data
v1 <- (colnames(playlist_data,prefix="col")
as.data.frame(v1)
# Stack columns of playlist_data
v1 <- (colnames(playlist_data,prefix="col")
as.data.frame(v1)
# Stack columns of playlist_data
"columns" <- (colnames(playlist_data,prefix="col")
as.data.frame("columns")
# Location of DJs
df2 <- unique(df[,c'Location')])
# Location of DJs
unique('Location', incomparables=f)
# Location of DJs
unique('Location', incomparables=FALSE)
# Location of DJs
unique(playlist_data[c('Location')], incomparables=FALSE)
# Age of DJs
playlist_data[c('DJ_Name','Age)]
# Age of DJs
playlist_data[c('DJ_Name','Age')]
# More information about the R command, complete the code
?read_csv()
?read_csv()
knitr::include_graphics("help.png")
knitr::opts_chunk$set(echo = TRUE)
# Type the name of the variable we assigned the data-set to
head(DJ_Name)
# Stack columns of playlist_data
"columns" <- (colnames(playlist_data,prefix="col")
as.data.frame("columns")
# Number of columns
ncol(playlist_data)
There are 7 columns
ncol(playlist_data)
# Age of DJs
playlist_data[c('DJ_Name','Age')]
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point() +
labs(x="Age",y="Ratings",
title="Does the age of the DJ affect their ratings?",
caption="There is no correlation.")
# complete the code to generate the plot
?geom_point
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point(shape = 5, colour = "black", fill = "white", size = 1, stroke = 1)
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point()
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating))
# complete the code to generate the plot
library(ggplot2)
ggplot(data = playlist_data)
# Age of DJs
playlist_data[c('DJ_Name','Age')]
# Location of DJs
unique(playlist_data[c('Location')], incomparables=FALSE)
# No output is required for this code
# Only the list of commands that execute the task mentioned in the question are required
read_csv(sales_data.csv)
# Type the name of the variable we assigned the data-set to
head(DJ_Name)
# Type the name of the variable, to see what it contains
DJ_Name
knitr::include_graphics("help.png")
knitr::opts_chunk$set(echo = TRUE)
# Stack columns of playlist_data
"columns" <- (colnames(playlist_data,prefix="col")
as.data.frame("columns")
# Stack columns of playlist_data
stack(DJ_Name)
# Stack columns of playlist_data
glimpse(playlist_data)
# Stack columns of playlist_data
glimpse(playlist_data)
# Stack columns of playlist_data
glimpse(playlist_data)
# Stack columns of playlist_data
glimpse(playlist_data)
# Stack columns of playlist_data
glimpse(playlist_data)
# Stack columns of playlist_data
glimpse(playlist_data)
# Import the "playlist_data.csv" dataset into R
read_csv("playlist_data.csv")
# Load the necessary package to work with CSV files in R.
library(tidyverse)
# Type the name of the variable, to see what it contains
Playlist
# Assign the variable to a dataset
Playlist <- read_csv("playlist_data.csv")
# Type the name of the variable, to see what it contains
Playlist
# Type the name of the variable we assigned the data-set to
head(Playlist)
# Stack columns of playlist_data
glimpse(Playlist)
# Number of columns
ncol(Playlist)
#There are 7 columns
# Number of DJs
nrow(Playlist)
There are 26 DJs
# Number of DJs
nrow(Playlist)
#There are 26 DJs
# Location of DJs
unique(Playlist[c('Location')], incomparables=FALSE)
# Age of DJs
Playlist[c('DJ_Name','Age')]
# complete the code to generate the plot
library(ggplot2)
ggplot(data = Playlist)
# complete the code to generate the plot
ggplot(data=playlist_data,mapping=aes(x=Age,y=Rating)) +
geom_point()
# complete the code to generate the plot
ggplot(data=Playlist,mapping=aes(x=Age,y=Rating)) +
geom_point()
# complete the code to generate the plot
?geom_point
ggplot(data=Playlist,mapping=aes(x=Age,y=Rating)) +
geom_point(shape = 5, colour = "black", fill = "white", size = 1, stroke = 1)
# complete the code to generate the plot
ggplot(data=Playlist,mapping=aes(x=Age,y=Rating)) +
geom_point() +
labs(x="Age",y="Ratings",
title="Does the age of the DJ affect their ratings?",
caption="There is no correlation.")
Playlist$DJ_Name$Age
# Age of DJs
Playlist$DJ_Name
Playlist[c('DJ_Name','Age')]
# Age of DJs
Playlist$DJ_Name
# Age of DJs
Playlist[c('DJ_Name','Age')]
filter_rows <- c("DJ_Name","Age")
# Age of DJs
filter_rows <- c("DJ_Name","Age")
# Age of DJs
filter_rows <- c("DJ_Name","Age")
# Age of DJs
filter_rows <- c("DJ_Name","Age")
Playlist %>% filter(name%in%filter_rows)
# Age of DJs
filter_rows <- c("DJ_Name","Age")
Playlist %>% filter(name%in%filter_rows)
# Age of DJs
filter_rows <- c("DJ_Name","Age")
Playlist %>% filter(name%in%filter_rows)
# Age of DJs
Playlist[c('DJ_Name','Age')]
# Location of DJs
filter_rows <- c("DJ_Name","Location")
# Location of DJs
Playlist$Location
# Age of DJs
Playlist$Age
